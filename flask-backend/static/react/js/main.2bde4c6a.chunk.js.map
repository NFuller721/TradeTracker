{"version":3,"sources":["Utils/toPrice.js","Logic/getBalance.js","Logic/getLoggedIn.js","Logic/getTrades.js","Pages/HomePage.js","Pages/LoginPage.js","Pages/LogoutPage.js","App.js","reportWebVitals.js","index.js"],"names":["toPrice","number","Intl","NumberFormat","style","currency","minimumFractionDigits","format","getBalance","krakenInfo","setKrakenInfo","a","fetch","data","json","Response","balanceInfo","error","length","console","Object","keys","result","forEach","key","parseFloat","balance","getLoggedIn","loggedIn","getTrades","trades","HomePage","useState","useEffect","className","Typography","to","LoginPage","ApiKey","SecretKey","formValues","setFormValues","changeHandler","event","target","name","value","Paper","square","onSubmit","preventDefault","method","headers","body","JSON","stringify","then","window","location","replace","TextField","variant","placeholder","onChange","type","Button","LogoutPage","logout","App","prefersDarkMode","useMediaQuery","theme","createMuiTheme","palette","ThemeProvider","height","width","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"js/main.2bde4c6a.chunk.js","sourcesContent":["export const toPrice = (number) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2,\n  });\n\n  return formatter.format(number);\n};\n","import { toPrice } from \"../Utils/toPrice\";\n\nexport const getBalance = async (krakenInfo, setKrakenInfo) => {\n  const data = await fetch(\"/Api/54657687969758647563/getBalance\");\n  const Response = await data.json();\n\n  let balanceInfo = 0;\n\n  if (Response.Response.error.length) {\n    console.error(`Balance Error: ${Response.Response.error[0]}`);\n    return;\n  }\n\n  Object.keys(Response.Response.result).forEach((key) => {\n    balanceInfo += parseFloat(Response.Response.result[key]);\n  });\n\n  setKrakenInfo({ ...krakenInfo, balance: toPrice(balanceInfo) });\n};\n","export const getLoggedIn = async (krakenInfo, setKrakenInfo) => {\n  const data = await fetch(\"/Api/54657687969758647563/loggedIn\");\n  const Response = await data.json();\n\n  setKrakenInfo({ ...krakenInfo, loggedIn: Response.Response });\n};\n","export const getTrades = async (krakenInfo, setKrakenInfo) => {\n  const data = await fetch(\"/Api/54657687969758647563/getTrades\");\n  const Response = await data.json();\n\n  if (Response.Response.error.length) {\n    console.error(`Trades Error: ${Response.Response.error[0]}`);\n    return;\n  }\n\n  setKrakenInfo({ ...krakenInfo, trades: Response.Response.result.trades });\n};\n","import { Typography, Paper } from \"@material-ui/core\";\nimport { Redirect } from \"react-router\";\nimport { useState, useEffect } from \"react\";\n\nimport { getBalance } from \"../Logic/getBalance\";\nimport { getLoggedIn } from \"../Logic/getLoggedIn\";\nimport { getTrades } from \"../Logic/getTrades\";\n\nimport { TradesTable } from \"../Components/TradesTable\";\n\nimport \"./css/HomePage.css\";\n\nexport const HomePage = () => {\n  const [krakenInfo, setKrakenInfo] = useState({\n    loggedIn: true,\n    balance: \"$ 0.00\",\n    trades: {},\n  });\n\n  useEffect(() => {\n    getLoggedIn(krakenInfo, setKrakenInfo);\n    getBalance(krakenInfo, setKrakenInfo);\n    getTrades(krakenInfo, setKrakenInfo);\n  }, []);\n\n  return (\n    <div className=\"HomePage\">\n      {krakenInfo.loggedIn ? (\n        <Typography>Home Page:</Typography>\n      ) : (\n        <Redirect to=\"/login\" />\n      )}\n    </div>\n  );\n};\n","import { TextField, Typography, Paper, Button } from \"@material-ui/core\";\nimport { useState } from \"react\";\n\nimport \"./css/LoginPage.css\";\n\nexport const LoginPage = () => {\n  const [formValues, setFormValues] = useState({ ApiKey: \"\", SecretKey: \"\" });\n\n  const changeHandler = (event) => {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    fetch(\"/Api/54657687969758647563/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formValues),\n    }).then(() => {\n      window.location.replace(\"/\");\n    });\n  };\n\n  return (\n    <div className=\"LoginPage\">\n      <Paper className=\"FormPaper\" square>\n        <form onSubmit={onSubmit} className=\"LoginForm\">\n          <TextField\n            variant=\"filled\"\n            name=\"ApiKey\"\n            placeholder=\"Api Key\"\n            value={formValues.ApiKey}\n            onChange={changeHandler}\n          />\n          <TextField\n            variant=\"filled\"\n            name=\"SecretKey\"\n            placeholder=\"Secret Key\"\n            value={formValues.SecretKey}\n            onChange={changeHandler}\n            type=\"password\"\n          />\n          <div className=\"Grow\" />\n          <Button variant=\"contained\" type=\"submit\">\n            Login\n          </Button>\n        </form>\n      </Paper>\n    </div>\n  );\n};\n","import { TextField, Typography, Paper, Button } from \"@material-ui/core\";\nimport { useState, useEffect } from \"react\";\n\nexport const LogoutPage = () => {\n  const logout = async () => {\n    fetch(\"/Api/54657687969758647563/logout\").then((data) => {\n      window.location.replace(\"/\");\n    });\n  };\n\n  useEffect(() => {\n    logout();\n  }, []);\n\n  return <div className=\"LogoutPage\"></div>;\n};\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { HomePage } from \"./Pages/HomePage\";\nimport { LoginPage } from \"./Pages/LoginPage\";\nimport { LogoutPage } from \"./Pages/LogoutPage\";\n\nimport { Paper, useMediaQuery } from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst App = () => {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = createMuiTheme({\n    palette: {\n      type: prefersDarkMode ? \"dark\" : \"light\",\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Paper style={{ height: \"100vh\", width: \"100vw\" }} square>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\">\n                <HomePage />\n              </Route>\n              <Route exact path=\"/login\">\n                <LoginPage />\n              </Route>\n              <Route exact path=\"/logout\">\n                <LogoutPage />\n              </Route>\n            </Switch>\n          </Router>\n        </Paper>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}